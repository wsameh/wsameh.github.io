{"version":3,"file":"static/js/457.5f1f3b50.chunk.js","mappings":"wOAqBMA,EAAoB,SAACC,EAAcC,GACvC,IAAIC,EAA8B,GAUlC,OATAC,EAAAA,EAAAA,SAAoB,SAACC,GAChBA,EAAQJ,MAAQA,GACjBI,EAAQC,SAASC,SAAQ,SAACC,GACnBA,EAAQC,MAAQP,IACjBC,EAASK,EAAQL,OAEvB,GAEJ,IACOA,CACT,EA2EA,UAxEgB,WAEZ,IAAMO,GAAwBC,EAAAA,EAAAA,UAA6B,WACzD,OAAOX,EAAkB,YAAa,QACxC,GAAG,IAEGY,GAAyBD,EAAAA,EAAAA,UAA6B,WAC1D,OAAOX,EAAkB,aAAc,QACzC,GAAG,IAGGa,GAAYC,EAAAA,EAAAA,UACZC,GAAYD,EAAAA,EAAAA,UAGZE,GAAWC,EAAAA,EAAAA,MACTT,GAAYU,EAAAA,EAAAA,MAAZV,QAWV,OAREW,EAAAA,EAAAA,YAAU,WAAO,IAADC,EAAAC,EACC,UAAZb,EACQ,OAATK,QAAS,IAATA,GAAkB,QAATO,EAATP,EAAWS,eAAO,IAAAF,GAAlBA,EAAoBG,eAAgB,CAAEC,SAAU,WAC7B,WAAZhB,IACE,OAATO,QAAS,IAATA,GAAkB,QAATM,EAATN,EAAWO,eAAO,IAAAD,GAAlBA,EAAoBE,eAAgB,CAAEC,SAAU,WACpD,GAAG,CAACR,KAIJS,EAAAA,EAAAA,MAACC,EAAAA,EAAO,CAAAC,SAAA,EACNF,EAAAA,EAAAA,MAACG,EAAAA,EAAG,CAACC,IAAKhB,EAAUc,SAAA,EAClBG,EAAAA,EAAAA,KAACC,EAAAA,EAAK,CAAAJ,SAAC,yCAGPG,EAAAA,EAAAA,KAACE,EAAAA,EAAW,CAAC7B,OAAQO,KAErBoB,EAAAA,EAAAA,KAACC,EAAAA,EAAK,CAAAJ,SAAC,kBAGNM,EAAAA,EAAAA,KAAgB,SAACC,EAAMC,GACtB,GAAgB,aAAbD,EAAKjC,KACN,OAAGkC,EAAQ,GACDL,EAAAA,EAAAA,KAACM,EAAAA,EAAU,CAACC,QAASH,EAAMI,MAAM,WAGjCR,EAAAA,EAAAA,KAACM,EAAAA,EAAU,CAACC,QAASH,EAAMI,MAAM,QAE/C,QAEFb,EAAAA,EAAAA,MAACG,EAAAA,EAAG,CAACC,IAAKd,EAAUY,SAAA,EAClBG,EAAAA,EAAAA,KAACC,EAAAA,EAAK,CAAAJ,SAAC,0CAGPG,EAAAA,EAAAA,KAACE,EAAAA,EAAW,CAAC7B,OAAQS,KAErBkB,EAAAA,EAAAA,KAACC,EAAAA,EAAK,CAAAJ,SAAC,kBAGNM,EAAAA,EAAAA,KAAgB,SAACC,EAAMC,GACtB,GAAgB,cAAbD,EAAKjC,KACN,OAAGkC,EAAQ,GACDL,EAAAA,EAAAA,KAACM,EAAAA,EAAU,CAACC,QAASH,EAAMI,MAAM,WAGjCR,EAAAA,EAAAA,KAACM,EAAAA,EAAU,CAACC,QAASH,EAAMI,MAAM,QAE/C,SAIR,C","sources":["pages/WebPage.tsx"],"sourcesContent":["// React\r\nimport { useRef, useEffect, useMemo } from \"react\";\r\nimport { useLocation, useParams } from \"react-router-dom\";\r\n\r\n// Material UI Components\r\nimport { Box, Typography, ListItem, ListItemIcon } from \"@mui/material\"\r\n\r\n// Material Icons\r\nimport CircleIcon from '@mui/icons-material/CircleOutlined'\r\n\r\n// App Components\r\nimport PageBox from \"../components/Common/PageBox\"\r\nimport Title from '../components/Common/Title'\r\nimport PageContent from \"../components/Common/PageContent\";\r\nimport RefProject from \"../components/RefProjects/RefProject\";\r\n\r\n// Data\r\nimport textContent, { ITextContentBlock } from '../../src/data/TextContent'\r\nimport RefProjects from '../data/RefProjects'\r\n\r\n// Functions\r\nconst filterTextContent = (page: string, block: string): ITextContentBlock[] => {\r\n  let blocks: ITextContentBlock[] = []\r\n  textContent.forEach((content) => {\r\n    if(content.page == page){\r\n      content.sections.forEach((section) => {\r\n          if(section.name == block){\r\n            blocks = section.blocks\r\n          }\r\n      })\r\n    }\r\n  })\r\n  return blocks\r\n}\r\n\r\n// App Functional Component Page\r\nconst WebPage = () => {\r\n\r\n    const reactIntroTextContent = useMemo<ITextContentBlock[]>(() => {\r\n      return filterTextContent('web/react', 'intro')\r\n    }, [])\r\n\r\n    const blazorIntroTextContent = useMemo<ITextContentBlock[]>(() => {\r\n      return filterTextContent('web/blazor', 'intro')\r\n    }, [])\r\n\r\n    // Refs\r\n    const secOneRef = useRef<HTMLDivElement>();\r\n    const secTwoRef = useRef<HTMLDivElement>();\r\n\r\n    // Navigation\r\n    const location = useLocation()\r\n    const { section } = useParams()\r\n  \r\n    // Effects\r\n    useEffect(() => {\r\n      if(section === 'react')\r\n        secOneRef?.current?.scrollIntoView( { behavior: 'smooth' } )\r\n      else if (section === 'blazor')\r\n        secTwoRef?.current?.scrollIntoView( { behavior: 'smooth' } )\r\n    }, [location])\r\n\r\n  // JSX\r\n  return (\r\n    <PageBox>\r\n      <Box ref={secOneRef} >\r\n        <Title>\r\n          React Web Apps Development Services\r\n        </Title>\r\n        <PageContent blocks={reactIntroTextContent}/>\r\n\r\n        <Title>\r\n          Demo Projects\r\n        </Title>\r\n        {RefProjects.map((item, index) => {\r\n          if(item.page == 'web/react')\r\n            if(index % 2){\r\n              return (<RefProject project={item} align='right'/>)\r\n            }\r\n            else{\r\n              return (<RefProject project={item} align='left'/>)\r\n            }\r\n        })}\r\n      </Box>\r\n      <Box ref={secTwoRef} >\r\n        <Title>\r\n          Blazor Web Apps Development Services\r\n        </Title>\r\n        <PageContent blocks={blazorIntroTextContent}/>\r\n\r\n        <Title>\r\n          Demo Projects\r\n        </Title>\r\n        {RefProjects.map((item, index) => {\r\n          if(item.page == 'web/blazor')\r\n            if(index % 2){\r\n              return (<RefProject project={item} align='right'/>)\r\n            }\r\n            else{\r\n              return (<RefProject project={item} align='left'/>)\r\n            }\r\n        })}\r\n      </Box>\r\n    </PageBox>\r\n  )\r\n}\r\n\r\n// Exports\r\nexport default WebPage\r\n"],"names":["filterTextContent","page","block","blocks","textContent","content","sections","forEach","section","name","reactIntroTextContent","useMemo","blazorIntroTextContent","secOneRef","useRef","secTwoRef","location","useLocation","useParams","useEffect","_secOneRef$current","_secTwoRef$current","current","scrollIntoView","behavior","_jsxs","PageBox","children","Box","ref","_jsx","Title","PageContent","RefProjects","item","index","RefProject","project","align"],"sourceRoot":""}